# variant 1 (test variant)
path = "C:/Users/dima0/OneDrive/Рабочий стол/Учебники/6 семестр/Практика" # Абсолютный путь к папкам с видео
folders = ["trainset", "validationset"] # Две папки с видео
for i in folders:
  path = os.path.join(path, i)
  os.path.join(path, "*.avi")
  fileList = glob.glob(os.path.join(path, "*.avi"))
#  for filename in fileList:
#    print(filename)


#path_1 = "C:\Users\dima0\OneDrive\Рабочий стол\Учебники\6 семестр\Практика" Нельзя так писать


#print(cv2.__version__) Проверка подключения библиотеки opencv к python


# Плохой способ вывода на экран первой картинки видео
#while (not (0xFF == ord('q'))):
#    cv2.imshow('First frame', new_frame_list[0])


# Плохая попытка воспроизвести видео с помощью списка кадров
#i = 0
#while (cap.isOpened()):
#    cv2.imshow('frame', frame_list[i])
#    i = i + 1


# Тоже плохая попытка воспроизвести видео с помощью списка кадров
#for frames in frame_list:
#    cv2.imshow('frame', frames)


    ## Ищем контуры и складируем их в переменную contours (с исключениями)
    #try:
    #    _, contours, hierarchy = cv2.findContours(mask_Di.copy(), cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)
    #except Exception:
    #    pass
    #else:    
    #    # Отображаем контуры поверх изображения
    #    cv2.drawContours(frame, contours, -1, (255, 0, 0), 3, cv2.LINE_AA, hierarchy, 1)
    #    cv2.imshow("Contours", frame)


    ## Функция поиска контуров на изображении
    #contours = cv2.findContours(mask_Di, cv2.RETR_TREE, cv2.CHAIN_APPROX_NONE)
    #contours = contours[1]

    ## Рисуем контур объекта на исходном изображении
    #if contours is (not None):
    #    contours = sorted(contours, key = cv2.contourArea, reverse = True)
    #    cv2.drawContours(frame, contours[0], -1, (255, 0, 255), 3)
    #    cv2.imshow("Contours", frame)

    #    # Рисуем прямоугольник с искомым объектом на исходном изображении
    #    (x, y, w, h) = cv2.boundingRect(contours[0])
    #    cv2.rectangle(frame, (x, y), (x + w, y + h), (0, 255, 0), 2)
    #    cv2.imshow("Rect", frame)


#cap.release() # Освобождение оперативной памяти, занятой переменной "cap"
#cv2.destroyAllWindows() # Закрытие всех открытых окон
