import cv2 # Подключение opencv
import os # Множество функций для работы с ОС
import glob # Позволяет работать с масками файлов или шаблонами

# variant 2
path_1 = "C:/Users/dima0/OneDrive/Рабочий стол/Учебники/6 семестр/Практика/trainset"
path_2 = "C:/Users/dima0/OneDrive/Рабочий стол/Учебники/6 семестр/Практика/validationset"
fileList_1 = glob.glob(os.path.join(path_1, "*.avi"))
fileList_2 = glob.glob(os.path.join(path_2, "*.avi"))
for filename_1 in fileList_1:
  print(filename_1)
for filename_2 in fileList_2:
  print(filename_2)
    
# Попытка открыть одно видео
one_video = fileList_1[1] # Берём путь к первому видео из списка
print(one_video) # Выводим путь на экран

cap = cv2.VideoCapture(one_video) # Создаём экземпляр класса "видео"
frame_list = [] # Создаём список с кадрами
while (cap.isOpened()):
    ret, frame = cap.read()
    #print (ret)
    if (cv2.waitKey(1) & 0xFF == ord('q') or ret == False):
        break
    #gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY) # Чёрно-белый кадр
    #color_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB) # Цветной кадр (перестановка цветов в кадре)
    color_frame = frame
    frame_list.append(color_frame) # Запись кадра в массив
    #cv2.imshow('frame', color_frame) # Воспроизвести кадр

print(len(frame_list)) # Вывод длины списка кадров

# Вырезание каждого шестого кадра из списка
new_frame_list = []
i = 0
j = 0
for frame in frame_list:
    print(i)
    if (i % 6 == 0):
        new_frame_list.append(frame_list[i])
        j = j + 1
    i = i + 1

print(len(new_frame_list)) # Вывод в консоль длины нового списка кадров

first_frame = new_frame_list[40] # Берём определённый кадр из видео
first_frame = cv2.resize(first_frame, (700, 350))
cv2.imshow('First frame', first_frame)

# Ожидание нажатия клавиши "q" перед закрытием всех окон
while(1):
    if (cv2.waitKey(1) == ord("q")):
        break

# Поиск переключения светофора
min_b_red = 0
min_g_red = 100
min_r_red = 160
max_b_red = 20
max_g_red = 255
max_r_red = 255

min_b_green = 50
min_g_green = 150
min_r_green = 0
max_b_green = 100
max_g_green = 255
max_r_green = 255

i = 0
for frame_green in new_frame_list:

    frame_green = cv2.resize(frame_green, (700, 350))
    hsv_green = cv2.cvtColor(frame_green, cv2.COLOR_BGR2HSV)

    mask_green = cv2.inRange(hsv_green, (min_b_green, min_g_green, min_r_green), (max_b_green, max_g_green, max_r_green))

    mask_Er_green = cv2.erode(mask_green, None, iterations = 2)
    mask_Di_green = cv2.dilate(mask_Er_green, None, iterations = 3)
    mask_Di_green = cv2.resize(mask_Di_green, (700, 350))

    # Ищем контуры и складируем их в переменную contours (без исключений)
    contours_green, hierarchy_green = cv2.findContours(mask_Di_green.copy(), cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)
    if ((len(contours_green) > 0) and (i > 0)):
        frame_red = new_frame_list[i - 1]
        frame_red = cv2.resize(frame_red, (700, 350))
        
        hsv_red = cv2.cvtColor(frame_red, cv2.COLOR_BGR2HSV)

        mask_red = cv2.inRange(hsv_red, (min_b_red, min_g_red, min_r_red), (max_b_red, max_g_red, max_r_red))

        mask_Er_red = cv2.erode(mask_red, None, iterations = 2)
        mask_Di_red = cv2.dilate(mask_Er_red, None, iterations = 3)
        mask_Di_red = cv2.resize(mask_Di_red, (700, 350))

        contours_red, hierarchy_red = cv2.findContours(mask_Di_red.copy(), cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)
        if (len(contours_red) > 0):

            for contours in contours_green:
                # Рисуем прямоугольник с искомым объектом на исходном изображении
                (x, y, w, h) = cv2.boundingRect(contours)
                cv2.rectangle(frame_green, (x, y), (x + w, y + h), (0, 0, 255), 2)

            for contours in contours_red:
                (x, y, w, h) = cv2.boundingRect(contours)
                cv2.rectangle(frame_red, (x, y), (x + w, y + h), (0, 255, 0), 2)

            print("Кадр, на котором произошло переключение равен: ", i * 6)
            cv2.imshow("Frame_red", frame_red)
            cv2.imshow("Mask_Di_red", mask_Di_red)
            print("Количество красных контуров равно ", len(contours_red))
    cv2.imshow("Frame_green", frame_green)
    cv2.imshow("Mask_Di_green", mask_Di_green)
    print("Количество зелёных контуров равно ", len(contours_green))
    i = i + 1

    # Ожидание нажатия клавиши "q"
    while(1):
        if (cv2.waitKey(1) == ord("q")):
            break
